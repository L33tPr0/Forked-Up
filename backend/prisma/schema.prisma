// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Owner {
  id String @id @default(uuid())
  email String @unique
  username String @unique
  hashedPassword String @unique
  avatar String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  restaurant Restaurant[]

  @@map("users")
}

model Restaurant {
  id Int @id @default(autoincrement())
  name String @default("Humble Beginnings")
  owner_id String?
  has_carryout Boolean
  seating_capacity Int?
  is_for_sale Boolean

  owner Owner? @relation(fields: [owner_id], references: [id])

  inventory Inventory?
  menu Menu?

  @@map("restaurants")
}

model Inventory {
  id Int @id @default(autoincrement())
  restaurant_id Int @unique
  restaurant Restaurant @relation(fields: [restaurant_id], references: [id], onDelete: Cascade)

  ingredient Ingredient[]

  @@map("inventories")
}

model Menu {
  id Int @id @default(autoincrement())
  restaurant Restaurant @relation(fields: [restaurant_id], references: [id], onDelete: Cascade)
  restaurant_id Int @unique

  entry Entry[]

  @@map("menus")
}

model Entry {
  id Int @id @default(autoincrement())
  name String
  description String?
  price Decimal @db.Money
  is_gluten_free Boolean
  is_daily_special Boolean
  calories Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  menu Menu[]
  ingredient Ingredient[]

  @@map("entries")
}

model Ingredient {
  id Int @id @default(autoincrement())
  name String
  cost Decimal @db.Money
  ingredient_type String
  auto_ship Boolean?
  unit_type String
  quantity_on_hand Decimal @db.Decimal(64,2)
  quantity_to_order Decimal @db.Decimal(64,2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entry Entry[]
  inventory Inventory[]

  @@map("ingredients")
}